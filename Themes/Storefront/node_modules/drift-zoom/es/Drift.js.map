{"version":3,"sources":["../src/js/Drift.js"],"names":["isDOMElement","injectBaseStylesheet","Trigger","ZoomPane","Drift","triggerEl","options","VERSION","destroy","bind","TypeError","namespace","showWhitespaceAtEdges","containInline","inlineOffsetX","inlineOffsetY","inlineContainer","document","body","sourceAttribute","zoomFactor","paneContainer","undefined","inlinePane","handleTouch","onShow","onHide","injectBaseStyles","hoverDelay","touchDelay","hoverBoundingBox","touchBoundingBox","boundingBoxContainer","settings","_buildZoomPane","_buildTrigger","zoomPane","container","inline","trigger","el","imageURL","_setImageURL","enabled","_unbindEvents","isShowing","zf","boundingBox"],"mappings":"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","sourcesContent":["import { isDOMElement } from \"./util/dom\";\nimport injectBaseStylesheet from \"./injectBaseStylesheet\";\n\nimport Trigger from \"./Trigger\";\nimport ZoomPane from \"./ZoomPane\";\n\nexport default class Drift {\n  constructor(triggerEl, options = {}) {\n    this.VERSION = \"1.3.0\";\n    this.triggerEl = triggerEl;\n\n    this.destroy = this.destroy.bind(this);\n\n    if (!isDOMElement(this.triggerEl)) {\n      throw new TypeError(\"`new Drift` requires a DOM element as its first argument.\");\n    }\n\n    // Prefix for generated element class names (e.g. `my-ns` will\n    // result in classes such as `my-ns-pane`. Default `drift-`\n    // prefixed classes will always be added as well.\n    const namespace = options[\"namespace\"] || null;\n    // Whether the ZoomPane should show whitespace when near the edges.\n    const showWhitespaceAtEdges = options[\"showWhitespaceAtEdges\"] || false;\n    // Whether the inline ZoomPane should stay inside\n    // the bounds of its image.\n    const containInline = options[\"containInline\"] || false;\n    // How much to offset the ZoomPane from the\n    // interaction point when inline.\n    const inlineOffsetX = options[\"inlineOffsetX\"] || 0;\n    const inlineOffsetY = options[\"inlineOffsetY\"] || 0;\n    // A DOM element to append the inline ZoomPane to\n    const inlineContainer = options[\"inlineContainer\"] || document.body;\n    // Which trigger attribute to pull the ZoomPane image source from.\n    const sourceAttribute = options[\"sourceAttribute\"] || \"data-zoom\";\n    // How much to magnify the trigger by in the ZoomPane.\n    // (e.g., `zoomFactor: 3` will result in a 900 px wide ZoomPane imag\n    // if the trigger is displayed at 300 px wide)\n    const zoomFactor = options[\"zoomFactor\"] || 3;\n    // A DOM element to append the non-inline ZoomPane to.\n    // Required if `inlinePane !== true`.\n    const paneContainer = options[\"paneContainer\"] === undefined ? document.body : options[\"paneContainer\"];\n    // When to switch to an inline ZoomPane. This can be a boolean or\n    // an integer. If `true`, the ZoomPane will always be inline,\n    // if `false`, it will switch to inline when `windowWidth <= inlinePane`\n    const inlinePane = options[\"inlinePane\"] || 375;\n    // If `true`, touch events will trigger the zoom, like mouse events.\n    const handleTouch = options[\"handleTouch\"] || true;\n    // If present (and a function), this will be called\n    // whenever the ZoomPane is shown.\n    const onShow = options[\"onShow\"] || null;\n    // If present (and a function), this will be called\n    // whenever the ZoomPane is hidden.\n    const onHide = options[\"onHide\"] || null;\n    // Add base styles to the page. See the \"Theming\"\n    // section of README.md for more information.\n    const injectBaseStyles = options[\"injectBaseStyles\"] || true;\n    // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `mouseenter` event.\n    const hoverDelay = options[\"hoverDelay\"] || 0;\n    // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `touchstart` event.\n    // It's unlikely that you would want to use this option, since\n    // \"tap and hold\" is much more intentional than a hover event.\n    const touchDelay = options[\"touchDelay\"] || 0;\n    // If true, a bounding box will show the area currently being previewed\n    // during mouse hover\n    const hoverBoundingBox = options[\"hoverBoundingBox\"] || false;\n    // If true, a bounding box will show the area currently being previewed\n    // during touch events\n    const touchBoundingBox = options[\"touchBoundingBox\"] || false;\n    // A DOM element to append the bounding box to.\n    const boundingBoxContainer = options[\"boundingBoxContainer\"] || document.body;\n\n    if (inlinePane !== true && !isDOMElement(paneContainer)) {\n      throw new TypeError(\"`paneContainer` must be a DOM element when `inlinePane !== true`\");\n    }\n    if (!isDOMElement(inlineContainer)) {\n      throw new TypeError(\"`inlineContainer` must be a DOM element\");\n    }\n\n    this.settings = {\n      namespace,\n      showWhitespaceAtEdges,\n      containInline,\n      inlineOffsetX,\n      inlineOffsetY,\n      inlineContainer,\n      sourceAttribute,\n      zoomFactor,\n      paneContainer,\n      inlinePane,\n      handleTouch,\n      onShow,\n      onHide,\n      injectBaseStyles,\n      hoverDelay,\n      touchDelay,\n      hoverBoundingBox,\n      touchBoundingBox,\n      boundingBoxContainer\n    };\n\n    if (this.settings.injectBaseStyles) {\n      injectBaseStylesheet();\n    }\n\n    this._buildZoomPane();\n    this._buildTrigger();\n  }\n\n  get isShowing() {\n    return this.zoomPane.isShowing;\n  }\n\n  get zoomFactor() {\n    return this.settings.zoomFactor;\n  }\n\n  set zoomFactor(zf) {\n    this.settings.zoomFactor = zf;\n    this.zoomPane.settings.zoomFactor = zf;\n    this.trigger.settings.zoomFactor = zf;\n    this.boundingBox.settings.zoomFactor = zf;\n  }\n\n  _buildZoomPane() {\n    this.zoomPane = new ZoomPane({\n      container: this.settings.paneContainer,\n      zoomFactor: this.settings.zoomFactor,\n      showWhitespaceAtEdges: this.settings.showWhitespaceAtEdges,\n      containInline: this.settings.containInline,\n      inline: this.settings.inlinePane,\n      namespace: this.settings.namespace,\n      inlineOffsetX: this.settings.inlineOffsetX,\n      inlineOffsetY: this.settings.inlineOffsetY,\n      inlineContainer: this.settings.inlineContainer\n    });\n  }\n\n  _buildTrigger() {\n    this.trigger = new Trigger({\n      el: this.triggerEl,\n      zoomPane: this.zoomPane,\n      handleTouch: this.settings.handleTouch,\n      onShow: this.settings.onShow,\n      onHide: this.settings.onHide,\n      sourceAttribute: this.settings.sourceAttribute,\n      hoverDelay: this.settings.hoverDelay,\n      touchDelay: this.settings.touchDelay,\n      hoverBoundingBox: this.settings.hoverBoundingBox,\n      touchBoundingBox: this.settings.touchBoundingBox,\n      namespace: this.settings.namespace,\n      zoomFactor: this.settings.zoomFactor,\n      boundingBoxContainer: this.settings.boundingBoxContainer\n    });\n  }\n\n  setZoomImageURL(imageURL) {\n    this.zoomPane._setImageURL(imageURL);\n  }\n\n  disable() {\n    this.trigger.enabled = false;\n  }\n\n  enable() {\n    this.trigger.enabled = true;\n  }\n\n  destroy() {\n    this.trigger._unbindEvents();\n  }\n}\n"],"file":"Drift.js"}